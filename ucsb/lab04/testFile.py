import pytest
from lab04 import solveMaze

def test_maze_with_solution():
    maze = [
        ['+','+','+','+','G','+'],
        ['+',' ','+',' ',' ','+'],
        ['+',' ',' ',' ','+','+'],
        ['+',' ','+','+',' ','+'],
        ['+',' ',' ',' ',' ','+'],
        ['+','+','+','+','+','+']
    ]

    assert solveMaze(maze, 4, 4) == True
    assert maze == [
        ['+', '+', '+', '+', 'G', '+'],
        ['+', 8, '+', 11, 12, '+'],
        ['+', 7, 9, 10, '+', '+'],
        ['+', 6, '+', '+', 2, '+'],
        ['+', 5, 4, 3, 1, '+'],
        ['+', '+', '+', '+', '+', '+']
    ]

def test_maze_without_solution():
    maze = [
        ['+','+','+','+','G','+'],
        ['+',' ','+',' ',' ','+'],
        ['+',' ','+',' ','+','+'],
        ['+',' ','+','+',' ','+'],
        ['+',' ','+',' ',' ','+'],
        ['+','+','+','+','+','+']
    ]

    assert solveMaze(maze, 4, 4) == False

def test_maze_single_path():
    maze = [
        ['+','+','+','+','G','+'],
        ['+',' ',' ',' ',' ','+'],
        ['+','+','+','+','+','+'],
        ['+','+','+','+','+','+'],
        ['+',' ',' ',' ',' ','+'],
        ['+','+','+','+','+','+']
    ]

    assert solveMaze(maze, 1, 1) == True
    assert maze[1][4] == 4  # Ensure the last step is marked

    maze = [
        ['+', '+', '+', '+', 'G', '+'],
        ['+', ' ', ' ', ' ', ' ', '+'],
        ['+', '+', '+', '+', '+', '+'],
        ['+', '+', '+', '+', '+', '+'],
        ['+', ' ', ' ', ' ', ' ', '+'],
        ['+', '+', '+', '+', '+', '+']
    ]

    assert solveMaze(maze, 1, 4) == True
    assert maze[1][4] == 1  # Ensure the last step is marked

def test_maze_no_starting_path():
    maze = [
        ['+','+','+','+','G','+'],
        ['+','+','+',' ',' ','+'],
        ['+','+','+',' ','+','+'],
        ['+','+','+','+',' ','+'],
        ['+',' ',' ','+',' ','+'],
        ['+','+','+','+','+','+']
    ]

    assert solveMaze(maze, 4, 1) == False

if __name__ == "__main__":
    pytest.main()
